apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkerd-mcp
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-mcp
rules:
- apiGroups: [""]
  resources: ["pods", "services", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy.linkerd.io"]
  resources: ["servers", "serverauthorizations", "authorizationpolicies", "httproutes", "meshtlsauthentications", "networkauthentications"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-mcp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-mcp
subjects:
- kind: ServiceAccount
  name: linkerd-mcp
  namespace: linkerd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkerd-mcp
  namespace: linkerd
  labels:
    app: linkerd-mcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: linkerd-mcp
  template:
    metadata:
      labels:
        app: linkerd-mcp
      annotations:
        linkerd.io/inject: enabled
    spec:
      serviceAccountName: linkerd-mcp
      containers:
      - name: linkerd-mcp
        image: linkerd-mcp:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: LINKERD_NAMESPACE
          value: "linkerd"
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: linkerd-mcp
  namespace: linkerd
  labels:
    app: linkerd-mcp
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: linkerd-mcp
